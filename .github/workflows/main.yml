
name: MyShuttle.Mavennnn

on: 
  push:
    branches: [master]
 
jobs:
  build:
    name: üß™ Build
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Build App
      run: mvn -f pom.xml -DskipITs package 
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: "test-results/**/*.xml"
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
       name: myshuttle
       path: target/myshuttle.war

  

    # - name: Generate a table of test results
    #   run: |
    #     echo "| Test Result :test_tube: | Passed :green_circle: | Failed :x: | Skipped | Time Duration :alarm_clock: |" >> $GITHUB_STEP_SUMMARY
    #     echo "| ----------- | ------ | ------ | ------- | ------------- |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :green_circle: Pass | 122 | 0 | 3 | 12m 3s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :red_circle: Failed | 121 | 2 | 3 | 10m 3s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :green_circle: Pass  | 4 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :white_circle: Pass  | 9 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :yellow_circle: Pass  | 7 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :black_circle: Pass  | 6 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
  
  code-analysis:
     name: üîÜ Code Analysis
     runs-on: ubuntu-latest
     needs: [build]
     steps:
     
     - name: Checkout
       uses: actions/checkout@v2
       with:
         # Make sure the actual branch is checked out when running on pull requests
         ref: ${{ github.head_ref }}
     
     - name: Cache SonarCloud packages
       uses: actions/cache@v1
       with:
         path: ~/.sonar/cache
         key: ${{ runner.os }}-sonar
         restore-keys: ${{ runner.os }}-sonar
      
     - name: Cache Maven packages
       uses: actions/cache@v1
       with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
     
     - name: Build and analyze
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=CanarysAutomations_MyShuttle -DskipITs
     - name: Upload Test Results
       if: always()
       uses: actions/upload-artifact@v3
       with:
          name: Test Results (python-${{ matrix.python-version }}, ${{ matrix.os }})
          path: |
            test-results/*.xml
            unit-test-results.json
     - name: Publish Test Results
       uses: EnricoMi/publish-unit-test-result-action@v1
       id: test-results
       if: always()
       with:
          files: "test-results/**/*.xml"

     - name: Conclusion
       run: echo "Conclusion is ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}"
     steps:
- ‚Ä¶
- name: Publish Test Results
  uses: EnricoMi/publish-unit-test-result-action@v1
  id: test-results
  if: always()
  with:
    files: "test-results/**/*.xml"

- name: Set badge color
  shell: bash
  run: |
    case ${{ fromJSON( steps.test-results.outputs.json ).conclusion }} in
      success)
        echo "BADGE_COLOR=31c653" >> $GITHUB_ENV
        ;;
      failure)
        echo "BADGE_COLOR=800000" >> $GITHUB_ENV
        ;;
      neutral)
        echo "BADGE_COLOR=696969" >> $GITHUB_ENV
        ;;
    esac

- name: Create badge
  uses: emibcn/badge-action@d6f51ff11b5c3382b3b88689ae2d6db22d9737d1
  with:
    label: Tests
    status: '${{ fromJSON( steps.test-results.outputs.json ).stats.tests }} tests, ${{ fromJSON( steps.test-results.outputs.json ).stats.runs }} runs: ${{ fromJSON( steps.test-results.outputs.json ).conclusion }}'
    color: ${{ env.BADGE_COLOR }}
    path: badge.svg

- name: Upload badge to Gist
  # Upload only for master branch
  if: >
    github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'master' ||
    github.event_name != 'workflow_run' && github.ref == 'refs/heads/master'
  uses: andymckay/append-gist-action@1fbfbbce708a39bd45846f0955ed5521f2099c6d
  with:
    token: ${{ secrets.GIST_TOKEN }}
    gistURL: https://gist.githubusercontent.com/{user}/{id}
    file: badge.svg

  run-lint:
    name: üîç Lint Code Base
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 

#=========================================================================================================

  deploy:
    runs-on: ubuntu-latest
    needs: [build, code-analysis]
    name: Azure Web App
    
    env:
     AZURE_WEBAPP_NAME: myshuttlejava
     AZURE_WEBAPP_PACKAGE_PATH: ${{ github.workspace }}
     JAVA_VERSION: '1.8'                
     AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v1.0.0
        with:
         name: myshuttle
      
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: myshuttlejava
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/target/*.war'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
